/* 01_transform property */
/* transform:translate(), sacle(), rotate(),skew() */
/* div {
  width: 7rem;
  height: 7rem;
  display: inline-block;
}
.one {
  background: green;

  transform: translateX(1.5rem); */
/* percent value in translate property follows the actual width and height of div element */
/* transform: translateX(50%); */

/* transform: translateY(5rem); */
/* } */
/* .two {
  background: orange;
  transform: translateY(5rem);
}
.three {
  background: pink;
  transform: translate(200px, 300px);
} */
/* 02_translate example */
/* .hero {
  min-height: 100vh;
  position: relative;
}
.hero-center {
  border: 2px solid red;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  min-width: 300px;
} */
/* 03_translate scale property */
/* div {
  width: 8rem;
  height: 8rem;
  display: inline-block;
}
.one {
  background: green;
  z-index: 2;
  transform: scale(2);
}
.two {
  background: orange;
  transform: scaleX(2);
}
.three {
  background: orangered;
  transform: scaleY(2);
}
.four {
  background: blue;
  transform: scaleZ(5);
} */
/* 04_transform rotate property */
/* div {
  width: 8rem;
  height: 8rem;
  display: inline-block;
}
.one {
  background: green;
  transform: rotate(20deg);
}
.two {
  background: orange;
  transform: rotate(380deg);
}
.three {
  background: orangered;
  transform: rotateX(10deg);
  transform: rotateY(10deg);
} */
/* 05_transform skew property */
/* div {
  width: 8rem;
  height: 8rem;
  display: inline-block;
}
.one {
  background: green;
  transform: skew(40deg);
  transform: skew(40deg, 20deg);
}
.two {
  background: orange;
  transform: skewX(40deg);
}
.three {
  background: orangered;
  transform: skewY(40deg);
} */

/* 06_transition property */
/* transition: change over time
transition-property:
transition-duration: */
div {
  width: 8rem;
  height: 8rem;
  display: inline-block;
  /* margin: 2rem auto; */
}
/* div:hover {
  background: coral;
} */
.one {
  background: red;
}
.two {
  background: green;
  transition: all;
}
.three {
  background: blue;
  /* transition-property: background;
  transition-duration: 1s;
  transition-timing-function: ease-in-out;
  transition-delay: 0.5s; */
  cursor: pointer;
  /* shorthand for transition  transition- property, transition-duration, transition-timing-function, transition-delay*/
  transition: all 1s ease-in-out 0.5s;
}
.three:hover {
  background: coral;
  transform: scale(1.2);
  border-radius: 50%;
}
/* 07_transition timming function */
/* transition timming function
transition: all 3s here 5s 
ease = default
ease = slow start , fast , slow end 
linear = same speed start to end
ease-in = slow start
ease-out = slow end
ease-in-out = slow start, fast ,slow end*/
